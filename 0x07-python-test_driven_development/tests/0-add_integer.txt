# 0-add_integer.txt

# 0-add_integer.py

def add_integer(a, b=98):
	"""
	This function adds two numbers.
	param a: The first number (default type: int)
	param b: The second number (default type: int, defaults to 98)
    	return: The sum of a and b (type: int)

    	Usage examples:
	>>> add_integer = __import__('0-add_integer').add_integer
	>>> add_integer(1, 3)
    	4

   	>>> add_integer(1, -4)
    	-3

    	>>> add_integer(3.0, 5.0)
    	8

    	>>> add_integer(3.3, 0.1)
    	3

    	>>> add_integer(-2.3, -3.8)
    	-5

    	>>> add_integer(4.3, -5)
    	-1

    	>>> add_integer(3)
    	101

    	Non-numbers:
    	>>> add_integer("world", 3)
    	Traceback (most recent call last):
		...
   	TypeError: a must be an integer

    	>>> add_integer(4, "hello")
    	Traceback (most recent call last):
		...
    	TypeError: b must be an integer

   	>>> add_integer(None)
    	Traceback (most recent call last):
		...
    	TypeError: a must be an integer

    	>>> add_integer(4, None)
    	Traceback (most recent call last):
		...
    	TypeError: b must be an integer
    	
	"""
    	


	if not isinstance(a, (int, float)):
        	raise TypeError("a must be an integer")
    	if not isinstance(b, (int, float)):
		raise TypeError("b must be an integer")

    	return int(a) + int(b)
